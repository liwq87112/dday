//
//  DetailedController.m
//  DDAYGO
//
//  Created by Login on 2017/9/14.
//  Copyright © 2017年 Summer. All rights reserved.
//

#import "DetailedController.h"
#import "DetailedViewCell.h"
#import "TextdetailsViewCell.h"
#import "MerchantController.h"
#import "PrefixHeader.pch"
#import "ShopIntroductionViewController.h"
#import "ProductDescriptionView.h"
#import "PurchaseView.h"
@interface DetailedController ()<UICollectionViewDelegate, UICollectionViewDataSource, UITableViewDelegate, UITableViewDataSource,UIScrollViewDelegate>

@property (nonatomic, strong)UITableView * tableviewVC;
@property (nonatomic, strong)UICollectionView * bottomVC;
@property (nonatomic, strong)NSArray * array;
@property (nonatomic, strong)UIWindow * window;
@property (nonatomic, strong)ProductDescriptionView * productDescriptionView;
@property (nonatomic, strong)PurchaseView * purchaseView;
@property (weak, nonatomic) IBOutlet UIButton *ljgmBtn;
@property (weak, nonatomic) IBOutlet UIButton *jrgwcBtn;

@end

@implementation DetailedController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationController.navigationBar.hidden = YES;
    [_bottomVC registerClass:[DetailedViewCell class] forCellWithReuseIdentifier:@"detailedViewCell"];
    [_tableviewVC registerClass:[TextdetailsViewCell class] forCellReuseIdentifier:@"textdetailsViewCell"];
    [self.view addSubview:self.bottomVC];
    self.shfwBottomView.hidden = YES;
    self.qbpjBottomView.hidden = YES;
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    [[UIApplication sharedApplication] setStatusBarHidden:YES];
    [self.navigationController setNavigationBarHidden:YES animated:YES];
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
    [[UIApplication sharedApplication] setStatusBarHidden:NO];
    [self.navigationController setNavigationBarHidden:NO animated:YES];
}

- (void)updateViewConstraints {
    [super updateViewConstraints];
    self.onScrollViewWidth.constant = ZP_Width * 3;
    for (int i = 0; i < 3; i ++) {
        UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(ZP_Width * i, 0, ZP_Width, self.onScrollView.height)];
        imageView.backgroundColor = [UIColor colorWithRed:arc4random_uniform(256)/255. green:arc4random_uniform(256)/255. blue:arc4random_uniform(256)/255. alpha:1];
        UIImage *image = [UIImage imageNamed:@"headImage.jpg"];
        imageView.image = image;
        [self.onScrollView addSubview:imageView];
    }
    
    self.pageControl = [[UIPageControl alloc] initWithFrame:CGRectMake(self.smallScrollView.center.x - 19.5, self.smallScrollView.size.height - 37, 39, 37)];
    self.pageControl.numberOfPages = 3;
    self.pageControl.currentPage = 0;
    [self.scrollView addSubview:self.pageControl];
    [self.shoucangBtn resizeWithDistance:5];
    [self.gouwuBtn resizeWithDistance:5];
    [self.dianpuBtn resizeWithDistance:5];
}


- (IBAction)backAction:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}
- (IBAction)shareAction:(id)sender {
}
- (IBAction)editAction:(id)sender {
}

- (IBAction)shoucangAction:(UIButton *)sender {
    sender.selected = !sender.selected;
}

- (IBAction)dianpuAction:(id)sender {
    
    MerchantController * Merchant = [[MerchantController alloc]init];
    [self.navigationController pushViewController:Merchant animated:YES];
    [[UIBarButtonItem appearance] setBackButtonTitlePositionAdjustment:UIOffsetMake(0, -60) forBarMetrics:UIBarMetricsDefault];   // 隐藏返回按钮上的文字
}

- (IBAction)xzflAction:(UIButton *)sender {
    if (!self.purchaseView) {
        self.purchaseView = [[NSBundle mainBundle] loadNibNamed:@"PurchaseView" owner:self options:nil].firstObject;
        self.purchaseView.frame = self.view.frame;
        [self.view addSubview:self.purchaseView];
    }
    
    [self.purchaseView show:^(id response) {
        [sender setTitle:response forState:UIControlStateNormal];
    }];
}

- (IBAction)cpsmAction:(UIButton *)sender {
    if (!self.productDescriptionView) {
        self.productDescriptionView = [[NSBundle mainBundle] loadNibNamed:@"ProductDescriptionView" owner:self options:nil].firstObject;
        self.productDescriptionView.frame = self.view.frame;
        [self.view addSubview:self.productDescriptionView];
    }
    [self.productDescriptionView show];
}
- (IBAction)cpnrAction:(id)sender {
    self.cpnrBottomView.hidden = NO;
    self.qbpjBottomView.hidden = YES;
    self.shfwBottomView.hidden = YES;
}

- (IBAction)qupjAction:(id)sender {
    self.cpnrBottomView.hidden = YES;
    self.qbpjBottomView.hidden = NO;
    self.shfwBottomView.hidden = YES;
}

- (IBAction)shfwAction:(id)sender {
    self.cpnrBottomView.hidden = YES;
    self.qbpjBottomView.hidden = YES;
    self.shfwBottomView.hidden = NO;
}

- (IBAction)ligmAction:(UIButton *)sender {
    if (!self.purchaseView) {
        self.purchaseView = [[NSBundle mainBundle] loadNibNamed:@"PurchaseView" owner:self options:nil].firstObject;
        self.purchaseView.frame = self.view.frame;
        [self.view addSubview:self.purchaseView];
    }
    
    [self.purchaseView show:^(id response) {
        [self.xzflBtn setTitle:response forState:UIControlStateNormal];
    }];
}
- (IBAction)jrgwcAction:(UIButton *)sender {
    if (!self.purchaseView) {
        self.purchaseView = [[NSBundle mainBundle] loadNibNamed:@"PurchaseView" owner:self options:nil].firstObject;
        self.purchaseView.frame = self.view.frame;
        [self.view addSubview:self.purchaseView];
    }
    
    [self.purchaseView show:^(id response) {
        [self.xzflBtn setTitle:response forState:UIControlStateNormal];
    }];
}


- (UICollectionView *)collectionView {
    
    if (_bottomVC == nil) {
        UICollectionViewFlowLayout * layout = [[UICollectionViewFlowLayout alloc]init];
        _bottomVC = [[UICollectionView alloc]initWithFrame:CGRectMake(0, 0, 375, 180) collectionViewLayout:layout];
        _bottomVC.delegate = self;
        _bottomVC.dataSource = self;
        _bottomVC.backgroundColor = [UIColor whiteColor];
//      自动适应
        _bottomVC.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
        
    }
    return _bottomVC;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return 1;
}
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {
    return 1;
}
//- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    
//        static NSString * identify = @"detailedViewCell";
//        DetailedViewCell * cell = [collectionView dequeueReusableCellWithReuseIdentifier:identify forIndexPath:indexPath];
//        
//        return cell;
    
//}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    return 150;
}
//  TableView代理

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 1;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    UICollectionViewFlowLayout * layout = [[UICollectionViewFlowLayout alloc]init];
    _tableviewVC = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, 375, 150)];
    layout.itemSize = CGSizeMake(375, 200);
    [_tableviewVC registerClass:[TextdetailsViewCell class] forCellReuseIdentifier:@"textdetailsViewCell"];
    _tableviewVC.delegate = self;
    _tableviewVC.dataSource = self;
    
    _smallScrollView.delegate = self;
    _tableviewVC.backgroundColor = [UIColor whiteColor];
//     自动适应
    _tableviewVC.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;

    TextdetailsViewCell * cell = [tableView dequeueReusableCellWithIdentifier:@"textdetailsViewCell"];
    
    return cell;
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

#pragma mark --- scrollView delegate
- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset {
    if (scrollView == self.smallScrollView) {
        if (!velocity.y && velocity.x) {
            CGPoint point = *targetContentOffset;
            self.pageControl.currentPage = point.x/scrollView.width;
        }
    }
}
@end
