//
//  QCodeController.m
//  DDAYGO
//
//  Created by Login on 2017/10/10.
//  Copyright © 2017年 Summer. All rights reserved.
//

#import "QCodeController.h"
#import "QRCodeReaderView.h"
#import "DataViewController.h"
#import <AVFoundation/AVFoundation.h>
//#import <AudioToolbox/AudioToolbox.h>
//#import "PayViewController.h"
#import "PrefixHeader.pch"
//#define DeviceMaxHeight ([UIScreen mainScreen].bounds.size.height)
//#define DeviceMaxWidth ([UIScreen mainScreen].bounds.size.width)
//#define widthRate DeviceMaxWidth/320
//#define IOS8 ([[UIDevice currentDevice].systemVersion intValue] >= 8 ? YES : NO)
@interface QCodeController ()<AVCaptureMetadataOutputObjectsDelegate>
//{
//    QRCodeReaderView * readview;//二维码扫描对象
//    
//    BOOL isFirst;//第一次进入该页面
//    BOOL isPush;//跳转到下一级页面
//}

//@property (strong, nonatomic) CIDetector *detector;
/** 会话对象 */
@property (nonatomic, strong) AVCaptureSession *session;
/** 图层类 */
@property (nonatomic, strong) AVCaptureVideoPreviewLayer *previewLayer;
@property (nonatomic, strong) QRCodeReaderView *scanningView;
@property (nonatomic, strong) UIButton *right_Button;

@end

@implementation QCodeController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.title = @"扫一扫";
    [self.navigationController.navigationBar setTitleTextAttributes:@{NSForegroundColorAttributeName: ZP_textWite}];
   [self.navigationController.navigationBar setBarTintColor:ZP_NavigationCorlor];
//    UIBarButtonItem * rbbItem = [[UIBarButtonItem alloc]initWithTitle:@"相册" style:UIBarButtonItemStyleDone target:self action:@selector(alumbBtnEvent)];
//    self.navigationItem.rightBarButtonItem = rbbItem;
    
//    UIBarButtonItem * lbbItem = [[UIBarButtonItem alloc]initWithTitle:@"" style:UIBarButtonItemStyleDone target:self action:@selector(backButtonEvent)];
    
//    isFirst = YES;
//    isPush = NO;
    
    [self InitScan];
}

#pragma mark 初始化扫描
- (void)InitScan {
    
//    创建扫描边框
    // 创建扫描边框
    self.scanningView = [[QRCodeReaderView alloc] initWithFrame:self.view.frame outsideViewLayer:self.view.layer];
    [self.view addSubview:self.scanningView];
    
//    if (readview) {
//        [readview removeFromSuperview];
//        readview = nil;
//    }
//    
//    readview = [[QRCodeReaderView alloc]initWithFrame:CGRectMake(0, 0, DeviceMaxWidth, DeviceMaxHeight)];
//    readview.is_AnmotionFinished = YES;
//    readview.backgroundColor = [UIColor clearColor];
//    readview.delegate = self;
//    readview.alpha = 0;
//    
//    [self.view addSubview:readview];
//    
//    [UIView animateWithDuration:0.5 animations:^{
//        readview.alpha = 1;
//    }completion:^(BOOL finished) {
//        
//    }];
    
}


- (void)viewWillAppear:(BOOL)animated {
    
    [super viewWillAppear:animated];
//  二维码扫描
    [self setupScanningQRCode];
}

#pragma mark - - - 二维码扫描
- (void)setupScanningQRCode {
    // 1、 获取摄像设备
    AVCaptureDevice *device = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];
    
    // 2、 创建输入流
    AVCaptureDeviceInput *input = [AVCaptureDeviceInput deviceInputWithDevice:device error:nil];
    
    // 3、 创建输出流
    AVCaptureMetadataOutput *output = [[AVCaptureMetadataOutput alloc] init];
    
    // 4、设置代理 在主线程里刷新
    [output setMetadataObjectsDelegate:self queue:dispatch_get_main_queue()];
    
    // 设置扫描范围(每一个取值0～1，以屏幕右上角为坐标原点)
    output.rectOfInterest = CGRectMake(0.15, 0.24, 0.7, 0.52);
    
    // 5、 初始化链接对象（会话对象）
    self.session = [[AVCaptureSession alloc] init];
    //高质量采集率
    [_session setSessionPreset:AVCaptureSessionPresetHigh];
    
    // 5.1 添加会话输入
    [_session addInput:input];
    
    // 5.2 添加会话输出
    [_session addOutput:output];
    
    // 6、设置输出数据类型，需要将元数据输出添加到会话后，才能指定元数据类型，否则会报错
    // 设置扫码支持的编码格式(如下设置条形码和二维码兼容)
    output.metadataObjectTypes = @[AVMetadataObjectTypeQRCode, AVMetadataObjectTypeEAN13Code,  AVMetadataObjectTypeEAN8Code, AVMetadataObjectTypeCode128Code];
    
    // 7、实例化预览图层, 传递_session是为了告诉图层将来显示什么内容
    self.previewLayer = [AVCaptureVideoPreviewLayer layerWithSession:_session];
    _previewLayer.videoGravity = AVLayerVideoGravityResizeAspectFill;
    _previewLayer.frame = self.view.layer.bounds;
    
    // 8、将图层插入当前视图
    [self.view.layer insertSublayer:_previewLayer atIndex:0];
    
    // 9、启动会话
    [_session startRunning];
}
- (void)captureOutput:(AVCaptureOutput *)captureOutput didOutputMetadataObjects:(NSArray *)metadataObjects fromConnection:(AVCaptureConnection *)connection {
    // 会频繁的扫描，调用代理方法
    // 1. 如果扫描完成，停止会话
    [self.session stopRunning];
    
    // 2. 删除预览图层
    [self.previewLayer removeFromSuperlayer];
    
    // 3. 设置界面显示扫描结果
    if (metadataObjects.count > 0) {
        AVMetadataMachineReadableCodeObject *obj = metadataObjects[0];
        
        NSLog(@"metadataObjects = %@", metadataObjects);
        
        if ([obj.stringValue hasPrefix:@"http"]) {
            // 提示：如果需要对url或者名片等信息进行扫描，可以在此进行扩展！
            self.hidesBottomBarWhenPushed = YES;
            DataViewController * jumpVC = [[DataViewController alloc] init];
            jumpVC.jump_URL = obj.stringValue;
            NSLog(@"stringValue = = %@", obj.stringValue);
            [self.navigationController pushViewController:jumpVC animated:YES];
            self.hidesBottomBarWhenPushed = NO;
            
        }else { // 扫描结果为条形码
            self.hidesBottomBarWhenPushed = YES;
            DataViewController *jumpVC = [[DataViewController alloc] init];
            jumpVC.jump_bar_code = obj.stringValue;
            NSLog(@"stringValue = = %@", obj.stringValue);
            [self.navigationController pushViewController:jumpVC animated:YES];
            self.hidesBottomBarWhenPushed = NO;
        }
    }
}

// 移除定时器
- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    [self.scanningView removeTimer];
    
}

//  数据


//#pragma mark - 相册
//- (void)alumbBtnEvent
//{
//    
//    self.detector = [CIDetector detectorOfType:CIDetectorTypeQRCode context:nil options:@{ CIDetectorAccuracy : CIDetectorAccuracyHigh }];
//    
//    if (![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypePhotoLibrary]) { //判断设备是否支持相册
//        
//        if (IOS8) {
//            UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"未开启访问相册权限，现在去开启！" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
//            alert.tag = 4;
//            [alert show];
//        }
//        else{
//            UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"设备不支持访问相册，请在设置->隐私->照片中进行设置！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
//            [alert show];
//        }
//        
//        return;
//    }
//    
//    isPush = YES;
//    UIImagePickerController *mediaUI = [[UIImagePickerController alloc] init];
//    mediaUI.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
//    mediaUI.mediaTypes = [UIImagePickerController         availableMediaTypesForSourceType:UIImagePickerControllerSourceTypeSavedPhotosAlbum];
//    mediaUI.allowsEditing = NO;
//    mediaUI.delegate = self;
//    [self presentViewController:mediaUI animated:YES completion:^{
//        [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault animated:YES];
//    }];
//    
//    
//}

//- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
//{
//
//    UIImage *image = [info objectForKey:UIImagePickerControllerEditedImage];
//    if (!image){
//        image = [info objectForKey:UIImagePickerControllerOriginalImage];
//    }
//    
//    readview.is_Anmotion = YES;
//    
//    NSArray *features = [self.detector featuresInImage:[CIImage imageWithCGImage:image.CGImage]];
//    if (features.count >=1) {
//        
//        [picker dismissViewControllerAnimated:YES completion:^{
//            [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
//            
//            CIQRCodeFeature *feature = [features objectAtIndex:0];
//            NSString *scannedResult = feature.messageString;
//            //播放扫描二维码的声音
//            SystemSoundID soundID;
//            NSString *strSoundFile = [[NSBundle mainBundle] pathForResource:@"noticeMusic" ofType:@"wav"];
//            AudioServicesCreateSystemSoundID((__bridge CFURLRef)[NSURL fileURLWithPath:strSoundFile],&soundID);
//            AudioServicesPlaySystemSound(soundID);
//            
//            [self accordingQcode:scannedResult];
//            
//        }];
//        
//    }
//    else{
//        UIAlertView * alertView = [[UIAlertView alloc]initWithTitle:@"提示" message:@"该图片没有包含一个二维码！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
//        [alertView show];
//        
//        [picker dismissViewControllerAnimated:YES completion:^{
//            [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
//            
//            readview.is_Anmotion = NO;
//            [readview start];
//        }];
//    }
//}
//
//- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
//{
//    [picker dismissViewControllerAnimated:YES completion:^{
//        [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
//    }];
//    
//}
//
#pragma mark -QRCodeReaderViewDelegate
//- (void)readerScanResult:(NSString *)result
//{
//    readview.is_Anmotion = YES;
//    [readview stop];
    
//    //播放扫描二维码的声音
//    SystemSoundID soundID;
//    NSString *strSoundFile = [[NSBundle mainBundle] pathForResource:@"noticeMusic" ofType:@"wav"];
//    AudioServicesCreateSystemSoundID((__bridge CFURLRef)[NSURL fileURLWithPath:strSoundFile],&soundID);
//    AudioServicesPlaySystemSound(soundID);
//
//    [self Ju:result];
    
//    [self performSelector:@selector(reStartScan) withObject:nil afterDelay:1.5];
//}
//
////#pragma mark - 扫描结果处理
//- (void)accordingQcode:(NSString *)str {
//    
//    if (self.jump_bar_code) {
//        [self setupLabel];
//    } else {
//        [self setupWebView];
//    }
//
////    PayViewController * pay = [[PayViewController alloc]init];
////    [self.navigationController pushViewController:pay animated:YES];
//////    UIAlertView * alertView = [[UIAlertView alloc]initWithTitle:@"扫描结果" message:str delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
//////    [alertView show];
////    
////    NSLog(@"跳转");
//}
//
//- (void)reStartScan
//{
//    readview.is_Anmotion = NO;
//    
//    if (readview.is_AnmotionFinished) {
//        [readview loopDrawLine];
//    }
//    
//    [readview start];
//}
//
//#pragma mark - view
//- (void)viewWillAppear:(BOOL)animated
//{
//    [super viewWillAppear:animated];
//    
//    if (isFirst || isPush) {
//        if (readview) {
//            [self reStartScan];
//        }
//    }
//    
//}
//
//- (void)viewDidDisappear:(BOOL)animated
//{
//    [super viewDidDisappear:animated];
//    
//    if (readview) {
//        [readview stop];
//        readview.is_Anmotion = YES;
//    }
//    
//}
//
//- (void)viewDidAppear:(BOOL)animated
//{
//    [super viewDidAppear:animated];
//    
//    if (isFirst) {
//        isFirst = NO;
//    }
//    if (isPush) {
//        isPush = NO;
//    }
//}

@end
